//Max sum path in two arrays

Given two sorted arrays A and B of size M and N respectively. 
Each array may have some elements in common with the other array.
Find the maximum sum of a path from the beginning of any array to the end of any of the two arrays. 
We can switch from one array to another array only at the common elements.Both the arrays are sorted.
Note: Only one repeated value is considered in the valid path sum.

Input1:
M = 5, N = 4
A[] = {2,3,7,10,12}
B[] = {1,5,7,8}
Output: 35
Explanation: The path will be 1+5+7+10+12= 35.

Input:
M = 3, N = 3
A[] = {1,2,3}
B[] = {3,4,5}
Output: 15
Explanation: The path will be 1+2+3+4+5=15.

Java code:

class Solution
{
    /*You are required to complete this method
    * ar1 : 1st array
    * ar2 : 2nd array
    */
    int maxPathSum(int ar1[], int ar2[])
    {
        // Your code here
        long sum1=0;
        long sum2=0;
        long ans=0;
        int i=0,j=0;
        int n1=ar1.length;
        int n2=ar2.length;
        while(i<n1&&j<n2)
        {
            if(ar1[i]<ar2[j])
            {
                sum1+=ar1[i];
                i++;
            }
            else if(ar1[i]>ar2[j])
            {
                sum2+=ar2[j];
                j++;
            }
            else{
                sum1+=ar1[i];
                sum2+=ar2[j];
                i++;
                j++;
                ans=ans+Math.max(sum1,sum2);
                sum1=0;
                sum2=0;
            }
        }
        while(i<n1)
        {
           sum1+=ar1[i];
                i++;  
        }
        while(j<n2)
        {
           sum2+=ar2[j];
                j++;  
        }
        ans=ans+Math.max(sum1,sum2);
        return (int)ans;
    }
}